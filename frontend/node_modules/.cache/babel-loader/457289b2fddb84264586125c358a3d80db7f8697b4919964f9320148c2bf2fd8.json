{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jarde\\\\todo list\\\\frontend\\\\src\\\\components\\\\Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Weather = () => {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchWeather = async () => {\n      const apiKey = 'SUA_CHAVE_DE_API'; // Substitua pela sua chave de API\n      const city = 'São Paulo'; // Altere para a cidade desejada\n      const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n      try {\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error('Erro ao buscar clima.');\n        }\n        const data = await response.json();\n        setWeather(data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchWeather();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Clima em \", weather.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: weather.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [weather.main.temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Weather, \"KCkQheFxQrPX5eajujaAYiYqU1o=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Weather","_s","weather","setWeather","error","setError","fetchWeather","apiKey","city","url","response","fetch","ok","Error","data","json","message","children","fileName","_jsxFileName","lineNumber","columnNumber","name","description","main","temp","_c","$RefreshReg$"],"sources":["C:/Users/jarde/todo list/frontend/src/components/Weather.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Weather = () => {\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const fetchWeather = async () => {\n      const apiKey = 'SUA_CHAVE_DE_API'; // Substitua pela sua chave de API\n      const city = 'São Paulo';  // Altere para a cidade desejada\n      const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n\n      try {\n        const response = await fetch(url);\n        if (!response.ok) {\n          throw new Error('Erro ao buscar clima.');\n        }\n        const data = await response.json();\n        setWeather(data);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n\n    fetchWeather();\n  }, []);\n\n  return (\n    <div>\n      {error ? (\n        <p>{error}</p>\n      ) : (\n        weather && (\n          <div>\n            <h2>Clima em {weather.name}</h2>\n            <p>{weather.weather[0].description}</p>\n            <p>{weather.main.temp}°C</p>\n          </div>\n        )\n      )}\n    </div>\n  );\n};\n\nexport default Weather;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,MAAM,GAAG,kBAAkB,CAAC,CAAC;MACnC,MAAMC,IAAI,GAAG,WAAW,CAAC,CAAE;MAC3B,MAAMC,GAAG,GAAG,qDAAqDD,IAAI,UAAUD,MAAM,eAAe;MAEpG,IAAI;QACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;QACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;QACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCZ,UAAU,CAACW,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOV,KAAK,EAAE;QACdC,QAAQ,CAACD,KAAK,CAACY,OAAO,CAAC;MACzB;IACF,CAAC;IAEDV,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA;IAAAkB,QAAA,EACGb,KAAK,gBACJL,OAAA;MAAAkB,QAAA,EAAIb;IAAK;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,GAEdnB,OAAO,iBACLH,OAAA;MAAAkB,QAAA,gBACElB,OAAA;QAAAkB,QAAA,GAAI,WAAS,EAACf,OAAO,CAACoB,IAAI;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChCtB,OAAA;QAAAkB,QAAA,EAAIf,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACqB;MAAW;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvCtB,OAAA;QAAAkB,QAAA,GAAIf,OAAO,CAACsB,IAAI,CAACC,IAAI,EAAC,OAAE;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB;EAER;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACpB,EAAA,CAxCID,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AA0Cb,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}